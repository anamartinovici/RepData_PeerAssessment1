steps$date<-as.Date(steps$date)
class(steps$date)
imputedSteps<- steps#sapply(byInterval, impute)
wkday<-sapply(imputedSteps$date, weekdays)
class(wkday)
wkday
cbind(steps,wkday)
head(imputedSteps)
head(cbind(steps,wkday))
wkSteps<-cbind(steps,wkday)
head(wkSteps)
str(steps)
?weekdays
for (i in wkday){
if(i=="Saturday" || i=="Sunday") i="weekend"
else i<-"weekday"
}
wkSteps<-cbind(steps,wkday)
head(wkSteps)
for (i in wkday){
if(i=="Monday" || i=="Sunday") i="weekend"
else i<-"weekday"
}
wkSteps<-cbind(steps,wkday)
head(wkSteps)
for (i in wkday){
if(wkday[i]=="Monday") i="weekend"
else i<-"weekday"
}
for (i in wkday){
print(i)
if(i=="Monday") i="weekend"
else i<-"weekday"
}
for (i in wkday){
print(i)
if(i=="Monday") i<-"weekend"
else i<-"weekday"
}
for (i in wkday){
print(i)
if(i=="Monday") i<-"weekend"
else i<-"weekday"
print(i)
}
for (i in wkday){
if(i=="Saturday") i<-"weekend"
else if (i=="Sunday") i<-"weekend"
else i<-"weekday"
}
wkSteps<-cbind(steps,wkday)
head(wkSteps)
wkConv <- function(wkday) {
for (i in wkday){
if(i=="Saturday") i<-"weekend"
else if (i=="Sunday") i<-"weekend"
else i<-"weekday"
i
}
}
wkConv(wkday)
wkConv <- function(wkday) {
numeric(yn)
for (i in wkday){
if(i=="Saturday") i<-"weekend"
else if (i=="Sunday") i<-"weekend"
else i<-"weekday"
yn<-c(yn,i)
}
return (yn)
}
wkConv(wkday)
wkConv <- function(wkday) {
yn<-NULL
for (i in wkday){
if(i=="Saturday") i<-"weekend"
else if (i=="Sunday") i<-"weekend"
else i<-"weekday"
yn<-c(yn,i)
}
return (yn)
}
wkConv(wkday)
wkday<-wkConv(wkday)
wkSteps<-cbind(steps,wkday)
head(wkSteps)
?plot
?colname
?colnames
?cbind
byWeek<-split(wkSteps,wkSteps[,4])
nrow(byWeek)
class(byWeek)
length(byWeek)
plot(byWeek)
plot(byWeek[1])
class(byWeek[1])
byWeek[1]
?dataFrame
byWeek[,1]
byWeek[[1]]
class(byWeek[[1]])
plot(byWeek[[1]])
byWeek[[1]]
plot(byWeek[[1],1])
plot(byWeek[[1]])
plot(byWeek[[1]], type='l')
plot(byWeek[[1]], type='l')
?plot
wkday<-factor(wkConv(wkday))
wkSteps<-cbind(steps,wkday)
str(byWeek)
impute<-function(dfr){
yn<-NULL
for (i in dfr){
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
}
return (yn)
}
imp<- impute(steps) #sapply(byInterval, impute)
impute<-function(dfr){
yn<-NULL
print(i)
for (i in dfr){
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
}
return (yn)
}
imp<- impute(steps) #sapply(byInterval, impute)
impute<-function(dfr){
yn<-NULL
print(i)
for (i in dfr){
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
}
return (yn)
}
imp<- impute(steps$steps) #sapply(byInterval, impute)
impute<-function(dfr){
yn<-NULL
for (i in dfr){
print(i)
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
}
return (yn)
}
imp<- impute(steps$steps) #sapply(byInterval, impute)
impute<-function(dfr){
yn<-NULL
for (i in dfr){
print(i)
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
print i
}
return (yn)
}
impute<-function(dfr){
yn<-NULL
for (i in dfr){
print(i)
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
print(i)
}
return (yn)
}
imp<- impute(steps$steps) #sapply(byInterval, impute)
imputedSteps$steps<-imp
head(imputedSteps)
impute<-function(dfr){
yn<-NULL
for (i in dfr){
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
}
return (yn)
}
imp<- impute(steps$steps) #sapply(byInterval, impute)
imputedSteps$steps<-imp
head(imputedSteps)
steps<-read.csv("activity.csv")             #load the data
impute<-function(dfr){
yn<-NULL
for (i in dfr){
if(is.na(i)) yn<-6000
else yn<-i
yn<-c(yn,i)
}
return (yn)
}
imp<- impute(steps$steps)
imp
class(imp)
length(imp)
nrow(steps)
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr){
if(is.na(i)) x<-6000
else x<-i
yn<-c(yn,x)
}
return (yn)
}
steps<-read.csv("activity.csv")             #load the data
imp<- impute(steps$steps)
imp
imp<- impute(steps$steps)
imputedSteps<-steps
imputedSteps$steps<-imp
head(imputedSteps)
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr){
if(is.na(i)) x<-mean(dfr)
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps$steps)
imputedSteps<-steps
imputedSteps$steps<-imp
head(imputedSteps)
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr){
if(is.na(i)) x<-mean(dfr, na.rm=TRUE)
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps$steps)
imputedSteps<-steps
imputedSteps$steps<-imp
head(imputedSteps)
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr$steps){
if(is.na(i)) x<-mean(split(dfr$steps, dfr$interval), na.rm=TRUE)
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps)
imputedSteps<-steps
imputedSteps$steps<-imp
head(imputedSteps)
?names
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr$steps){
if(is.na(i)) x<-mean(dfr$steps)
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps)
imputedSteps<-steps
imputedSteps$steps<-imp
head(imputedSteps)
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr$steps){
if(is.na(i)) x<-mean(dfr$steps, na.rm=TRUE)
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps)
imputedSteps<-steps
imputedSteps$steps<-imp
head(imputedSteps)
?attach
wkday<-sapply(imputedSteps$date, weekdays)
wkConv <- function(wkday) {
yn<-NULL
for (i in wkday){
if(i=="Saturday") i<-"weekend"
else if (i=="Sunday") i<-"weekend"
else i<-"weekday"
yn<-c(yn,i)
}
return (yn)
}
wkday<-factor(wkConv(wkday))
wkSteps<-cbind(steps,wkday)
head(wkSteps)
class(wkday)
wkday<-factor(wkConv(wkday))
wkSteps<-cbind(imputedSteps,wkday)
head(wkSteps)
?weekdays
byWeek<-split(wkSteps,wkSteps$wkday)
head(byweek)
head(byWeek)
class(steps$steps)
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr$steps){
if(is.na(i)) x<-int(mean(dfr$steps, na.rm=TRUE))
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps)
imputedSteps<-steps
imputedSteps$steps<-imp
?integer
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr$steps){
if(is.na(i)) x<-as.integer(mean(dfr$steps, na.rm=TRUE))
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps)
imputedSteps<-steps
imputedSteps$steps<-imp
wkConv <- function(wkday) {
yn<-NULL
for (i in wkday){
if(i=="Saturday") i<-"weekend"
else if (i=="Sunday") i<-"weekend"
else i<-"weekday"
yn<-c(yn,i)
}
return (yn)
}
wkday<-factor(wkConv(wkday))
wkSteps<-cbind(imputedSteps,wkday)
head(wkSteps)
str(byWeek)
wkSteps
wkday
wkday<-sapply(imputedSteps$date, weekdays)
steps<-read.csv("activity.csv")             #load the data
byDate<-split(steps$steps, steps$date)          #split steps by date
stepsPerDay<-sapply(byDate, sum, na.rm=TRUE)            #add steps in intervals
byInterval<-split(steps$steps, steps$interval)      #split steps by interval
stepsPerInterval<-sapply(byInterval, mean, na.rm=TRUE) #average steps in intervals
steps$date<-as.Date(steps$date)
wkday<-sapply(imputedSteps$date, weekdays)
?weekdays
### Loading and preprocessing the data ###
steps<-read.csv("activity.csv")             #load the data
byDate<-split(steps$steps, steps$date)          #split steps by date
stepsPerDay<-sapply(byDate, sum, na.rm=TRUE)            #add steps in intervals
byInterval<-split(steps$steps, steps$interval)      #split steps by interval
stepsPerInterval<-sapply(byInterval, mean, na.rm=TRUE) #average steps in intervals
wkday<-sapply(imputedSteps$date, weekdays)
steps<-read.csv("activity.csv")             #load the data
byDate<-split(steps$steps, steps$date)          #split steps by date
stepsPerDay<-sapply(byDate, sum, na.rm=TRUE)            #add steps in intervals
byInterval<-split(steps$steps, steps$interval)      #split steps by interval
stepsPerInterval<-sapply(byInterval, mean, na.rm=TRUE) #average steps in intervals
impute<-function(dfr){
yn<-NULL
x<NULL
for (i in dfr$steps){
if(is.na(i)) x<-as.integer(mean(dfr$steps, na.rm=TRUE))
else x<-i
yn<-c(yn,x)
}
return (yn)
}
imp<- impute(steps)
imputedSteps<-steps
imputedSteps$steps<-imp
wkday<-sapply(imputedSteps$date, weekdays)
steps<-read.csv("activity.csv")             #load the data
class(steps$date)
?string
?character
wkday$date<-as.character(wkday$date)
imputedSteps$date<-as.character(imputedSteps$date)
wkday<-sapply(imputedSteps$date, weekdays)
?weekdays
imputedSteps$date<-as.date(imputedSteps$date)
imputedSteps$date<-as.Date(imputedSteps$date)
wkday<-sapply(imputedSteps$date, weekdays)
wkdaywkConv <- function(wkday) {
yn<-NULL
for (i in wkday){
if(i=="Saturday") i<-"weekend"
else if (i=="Sunday") i<-"weekend"
else i<-"weekday"
yn<-c(yn,i)
}
return (yn)
}
wkday<-factor(wkConv(wkday))
wkSteps<-cbind(imputedSteps,wkday)
head(wkSteps)
weeksteps
weekSteps
wkSteps
byWeek<-split(wkSteps,wkSteps$wkday)
str(byWeek)
wday<-byWeek$weekday
wdayInt<-wday$interval
wdayStep<-wday$steps
wend<-byWeek$weekend
wendInt<-wend$interval
wendStep<-wend$steps
par(mfrow=c(1,2))
plot(wdayInt, wdayStep, main="Weekday")
plot(wendInt, wendStep, main="Weekend")
par(mfrow=c(1,2))
plot(wdayInt, wdayStep, main="Weekday", type='l')
plot(wendInt, wendStep, main="Weekend", type='l')
wday<-byWeek$weekday
wdaybyInterval<-split(wday, steps$interval)      #split steps by interval
wdayInt<-wdaybyInterval$interval
wdayStep<-wdaybyInterval$steps
wday<-byWeek$weekday
wdaybyInterval<-split(wday, wday$interval)      #split steps by interval
wdayInt<-wdaybyInterval$interval
wdayStep<-wdaybyInterval$steps
wend<-byWeek$weekend
wendbyInterval<-split(wend, wend$interval)      #split steps by interval
wendInt<-wendbyInterval$interval
wendStep<-wendbyInterval$steps
par(mfrow=c(1,2))
plot(wdayInt, wdayStep, main="Weekday", type='l')
plot(wendInt, wendStep, main="Weekend", type='l')
str(wendByInterval)
str(wendbyInterval)
wday<-byWeek$weekday
wdaybyInterval<-split(wday, wday$interval)      #split steps by interval
wdayPerInterval<-sapply(byInterval, mean, na.rm=TRUE) #average steps in intervals
wdayInt<-wdayperInterval$interval
wdayStep<-wdayperInterval$steps
wdaybyInterval<-split(wday, wday$interval)      #split steps by interval
wdayPerInterval<-sapply(byInterval, mean, na.rm=TRUE) #average steps in intervals
wdayInt<-wdayPerInterval$interval
wdayStep<-wdayPerInterval$steps
str(wdayPerInterval)
plot(wdayPerInterval, main="Weekday", type='l')
wdayPerInterval<-sapply(wdaybyInterval, mean, na.rm=TRUE) #average steps in intervals
wday<-byWeek$weekday
wdaybyInterval<-split(wday, wday$interval)      #split steps by interval
wdayPerInterval<-sapply(wdaybyInterval, mean, na.rm=TRUE) #average steps in intervals
par(mfrow=c(1,2))
plot(wdayPerInterval, main="Weekday", type='l')
plot(wendPerInterval, main="Weekend", type='l')
class(wday)
wdaybyInterval<-split(wday, wday$interval)      #split steps by interval
class(wdayByInterval)
class(wdaybyInterval)
wdaybyInterval
wdayPerInterval<-sapply(wdaybyInterval$steps, mean, na.rm=TRUE) #average steps in intervals
plot(wdayPerInterval, main="Weekday", type='l')
wdayPerInterval
wday<-byWeek$weekday
wdaybyInterval<-split(wday$steps, wday$interval)      #split steps by interval
wdayPerInterval<-sapply(wdaybyInterval, mean, na.rm=TRUE) #average steps in intervals
plot(wdayPerInterval, main="Weekday", type='l')
wend<-byWeek$weekend
wendbyInterval<-split(wend, wend$interval)      #split steps by interval
wendPerInterval<-sapply(wendbyInterval, mean, na.rm=TRUE) #average steps in intervals
wend<-byWeek$weekend
wendbyInterval<-split(wend$steps, wend$interval)      #split steps by interval
wendPerInterval<-sapply(wendbyInterval, mean, na.rm=TRUE) #average steps in intervals
par(mfrow=c(1,2))
plot(wdayPerInterval, main="Weekday", type='l')
plot(wendPerInterval, main="Weekend", type='l')
steps<-read.csv("activity.csv")
ibyDate<-split(imputedSteps$steps, imputedSteps$date)   #split steps by date
istepsPerDay<-sapply(ibyDate, sum, na.rm=TRUE)            #add steps in intervals
hist(istepsPerDay, xlab="Steps",               #draw histogram
main="Steps per day", ylab="Frequency")
mean<-mean(istepsPerDay, na.rm=TRUE)         #Calculate the mean steps
print(mean)
median<-median(istepsPerDay, na.rm=TRUE)     #Calculate the median steps
print(median)
steps<-read.csv("activity.csv")             #load the data
byDate<-split(steps$steps, steps$date)          #split steps by date
stepsPerDay<-sapply(byDate, sum, na.rm=TRUE)            #add steps in intervals
hist(stepsPerDay, xlab="Steps",               #draw histogram
main="Steps per day", ylab="Frequency")
mean<-mean(stepsPerDay, na.rm=TRUE)         #Calculate the mean steps
print(mean)
median<-median(stepsPerDay, na.rm=TRUE)     #Calculate the median steps
print(median)
